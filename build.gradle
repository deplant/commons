plugins {
    id "java-library"
    id "maven-publish"
    id "signing"
}

group v_groupId
version v_version

repositories {
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/deplant/maven-artifactory")
        credentials {
            username = githubUsername
            password = githubUploadToken
        }
    }
    mavenCentral()
}

dependencies {

    // RUNTIME **************************


    // TESTS **************************

    // JUnit 5
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/deplant/maven-artifactory")
            credentials {
                username = githubUsername
                password = githubUploadToken
            }
        }
        maven {
            name = "Sonatype"
            url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            groupId = v_groupId
            artifactId = v_artifactId
            version = v_version

            from components.java

            pom {
                name = v_artifactId
                description = 'Development framework for Everscale DApp development'
                url = "https://github.com/" + v_repository
//                properties = [
//                        myProp          : "value",
//                        "prop.with.dots": "anotherValue"
//                ]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = v_developerId
                        name = v_developerName
                        email = v_developerEmail
                        organization = v_org
                        organizationUrl = v_url
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/" + v_repository + ".git"
                    developerConnection = "scm:git:ssh://github.com/" + v_repository + ".git"
                    url = "http://github.com/" + v_repository
                }
            }
        }
    }
}

signing {
    sign publishing.publications.gpr
}



java {
    withJavadocJar()
    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = JavaVersion.VERSION_22
    targetCompatibility = JavaVersion.VERSION_22
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

tasks.withType(JavaExec).configureEach {
    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

tasks.withType(Javadoc).configureEach {
    javadocTool = javaToolchains.javadocToolFor {
        languageVersion = JavaLanguageVersion.of(22)
    }
    failOnError false
    options.addBooleanOption('html5', true)
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
    options.addStringOption('-release', '22')
    options.addBooleanOption('-ignore-source-errors', true)
    options.addStringOption('Xdoclint:none', '-quiet')
}